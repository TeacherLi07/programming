import random
import numpy as np
import pandas as pd
import xlsxwriter

def main():
    isparking=np.zeros((1100,15840),dtype=bool)   #对于每个停车位，在整个时间轴上的占用情况
    lot_usage=[0]*1100
    file_path = r"D:\programming\research-parking\停车数据-出入时间戳&时长.txt" 
    with open(file_path, 'r') as file:
        content = file.read()
    numbers_list = content.split()
    numbers = [int(num) for num in numbers_list]
    for i in range(0,len(numbers),3):
        start_time=numbers[i]
        end_time=numbers[i+1]
        lot_number=0
        while isparking[lot_number][start_time]==True:
            lot_number+=1
        isparking[lot_number][start_time:end_time+1]=True
        lot_usage[lot_number]+=1
    
    
    # 将布尔数组转换为DataFrame
    df = pd.DataFrame(isparking)

    # 将DataFrame存储为CSV文件
    csv_filename = r"D:\programming\research-parking\isparking.csv"
    df.to_csv(csv_filename, index=False)

    # 创建一个新的Excel工作簿
    workbook = xlsxwriter.Workbook(r'D:\programming\research-parking\isparking.xlsx')
    worksheet = workbook.add_worksheet()

    # 设置单元格格式和颜色
    red_format = workbook.add_format({'bg_color': 'red'})

    # 设置每行、每列的宽度和高度（每行、每列均为2个像素）
    for row in range(1100):
        worksheet.set_row(row, 2)
    for col in range(15840):
        worksheet.set_column(col, 2)

    # 将布尔数组的True单元格标记为红色
    for row in range(1100):
        for col in range(15840):
            if isparking[row][col]:
                worksheet.write(row, col, '', red_format)

    # 关闭工作簿
    workbook.close()

    print(lot_usage)

main()

#结果：[56, 112, 99, 85, 78, 55, 83, 72, 54, 75, 19, 56, 63, 63, 56, 67, 35, 50, 63, 62, 53, 47, 70, 64, 62, 53, 50, 67, 47, 62, 50, 54, 54, 60, 57, 48, 56, 52, 50, 55, 55, 58, 50, 54, 57, 51, 50, 44, 54, 22, 50, 37, 58, 43, 49, 58, 54, 57, 53, 46, 52, 47, 47, 39, 44, 46, 54, 53, 47, 38, 48, 43, 58, 39, 53, 35, 55, 53, 42, 36, 59, 55, 34, 56, 58, 53, 53, 44, 36, 48, 61, 49, 49, 51, 32, 56, 66, 52, 56, 55, 50, 54, 42, 40, 54, 45, 54, 42, 47, 52, 42, 57, 55, 58, 62, 59, 61, 59, 61, 48, 53, 59, 56, 52, 54, 42, 63, 50, 57, 49, 40, 44, 53, 51, 46, 56, 46, 52, 58, 51, 63, 46, 51, 53, 51, 52, 54, 51, 61, 41, 47, 45, 52, 46, 43, 44, 46, 49, 51, 45, 51, 49, 44, 47, 49, 46, 52, 49, 58, 52, 45, 37, 49, 52, 50, 53, 37, 42, 50, 41, 39, 58, 34, 56, 51, 60, 40, 53, 50, 54, 54, 52, 54, 46, 46, 55, 38, 38, 49, 7, 44, 44, 44, 45, 47, 53, 50, 44, 45, 39, 47, 49, 48, 48, 58, 39, 46, 49, 52, 50, 51, 46, 52, 49, 55, 50, 56, 45, 52, 47, 48, 54, 49, 46, 54, 51, 44, 53, 42, 39, 50, 46, 40, 52, 48, 44, 43, 51, 51, 48, 50, 56, 41, 45, 44, 46, 41, 43, 46, 44, 48, 52, 47, 42, 39, 56, 48, 51, 39, 57, 29, 48, 43, 47, 43, 47, 49, 43, 38, 49, 52, 55, 49, 43, 42, 55, 43, 43, 56, 44, 42, 12, 48, 51, 37, 49, 44, 49, 42, 47, 50, 40, 40, 37, 45, 46, 46, 43, 44, 39, 46, 40, 41, 47, 43, 46, 45, 45, 45, 44, 39, 47, 42, 50, 53, 40, 48, 42, 30, 46, 47, 35, 40, 45, 46, 42, 41, 39, 35, 44, 49, 48, 38, 51, 41, 29, 45, 42, 48, 47, 44, 50, 44, 44, 44, 42, 42, 41, 39, 47, 37, 39, 42, 42, 42, 36, 39, 37, 46, 41, 32, 49, 39, 36, 32, 41, 48, 41, 39, 47, 30, 37, 45, 39, 41, 44, 39, 32, 35, 42, 39, 37, 35, 34, 37, 40, 35, 43, 46, 45, 37, 37, 19, 40, 37, 39, 41, 36, 38, 39, 47, 29, 37, 38, 43, 37, 37, 35, 38, 37, 38, 39, 38, 33, 43, 37, 15, 42, 43, 39, 24, 39, 36, 42, 36, 39, 45, 38, 31, 34, 35, 38, 37, 38, 33, 34, 30, 35, 34, 37, 34, 29, 32, 42, 35, 37, 34, 37, 38, 29, 35, 33, 34, 41, 38, 34, 32, 30, 40, 25, 32, 35, 36, 37, 27, 35, 37, 37, 32, 34, 33, 31, 29, 29, 33, 31, 30, 27, 28, 33, 21, 27, 34, 29, 29, 31, 34, 31, 36, 32, 32, 31, 28, 31, 34, 37, 31, 27, 37, 32, 30, 31, 27, 29, 30, 27, 30, 29, 29, 27, 29, 33, 31, 26, 30, 31, 25, 32, 29, 29, 31, 24, 20, 27, 27, 22, 20, 25, 27, 31, 28, 21, 24, 24, 27, 28, 30, 24, 27, 33, 29, 27, 23, 29, 21, 25, 24, 25, 26, 20, 29, 31, 32, 23, 28, 27, 25, 24, 29, 27, 28, 27, 22, 25, 26, 22, 25, 25, 26, 25, 27, 25, 23, 24, 24, 29, 24, 23, 28, 19, 25, 22, 31, 18, 25, 29, 20, 20, 26, 27, 29, 26, 25, 27, 26, 22, 26, 25, 23, 25, 25, 26, 26, 26, 21, 25, 24, 25, 30, 24, 25, 28, 21, 23, 22, 18, 25, 25, 24, 23, 26, 25, 19, 21, 20, 22, 26, 23, 22, 20, 24, 22, 20, 21, 20, 19, 19, 22, 21, 23, 23, 20, 20, 20, 26, 21, 20, 19, 20, 21, 17, 16, 23, 19, 21, 20, 19, 19, 23, 20, 18, 20, 25, 21, 21, 19, 19, 20, 22, 22, 16, 21, 16, 14, 19, 16, 18, 18, 16, 19, 19, 19, 17, 18, 16, 23, 17, 16, 17, 16, 19, 17, 17, 14, 16, 16, 20, 19, 19, 20, 20, 19, 16, 16, 18, 20, 14, 23, 13, 8, 17, 16, 15, 15, 17, 16, 15, 18, 19, 18, 15, 20, 21, 17, 15, 16, 17, 19, 16, 14, 15, 17, 18, 18, 15, 19, 17, 17, 17, 13, 19, 20, 17, 16, 14, 17, 17, 20, 17, 14, 17, 15, 18, 13, 16, 17, 17, 17, 14, 13, 19, 15, 14, 15, 19, 12, 16, 16, 20, 16, 18, 15, 15, 15, 17, 15, 14, 14, 16, 14, 18, 18, 17, 18, 14, 13, 18, 14, 14, 17, 17, 15, 15, 16, 17, 14, 16, 13, 15, 15, 16, 16, 13, 15, 15, 12, 14, 14, 16, 15, 12, 18, 15, 13, 16, 16, 15, 12, 11, 17, 11, 10, 12, 13, 12, 13, 12, 11, 10, 14, 10, 11, 12, 11, 11, 14, 12, 10, 13, 12, 14, 10, 9, 14, 15, 13, 11, 14, 10, 11, 12, 9, 8, 12, 13, 9, 12, 9, 16, 13, 12, 10, 11, 13, 12, 11, 9, 10, 7, 13, 11, 9, 9, 11, 12, 9, 11, 14, 10, 10, 7, 10, 11, 10, 11, 10, 9, 10, 12, 11, 12, 10, 6, 9, 10, 10, 11, 11, 10, 10, 11, 9, 9, 10, 9, 8, 8, 9, 10, 11, 11, 9, 10, 11, 11, 8, 9, 10, 9, 11, 10, 12, 9, 9, 10, 11, 9, 9, 7, 8, 10, 9, 8, 9, 7, 8, 10, 7, 9, 8, 7, 6, 7, 7, 8, 6, 6, 6, 6, 7, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 7, 6, 6, 5, 7, 7, 8, 6, 5, 5, 6, 6, 7, 5, 5, 2, 4, 5, 4, 4, 3, 5, 4, 3, 5, 4, 4, 5, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 3, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


